DeadCodeEliminationTest
---
DeadCodeElimination
---
DeadCodeEliminationRemovesLoadConsts
---
def test():
    x = 0
    x = 4
    return x
---
fun jittestmodule:test {
  bb 0 {
    v3:Nullptr = LoadConst<Nullptr>
    v6:ImmortalLongExact[4] = LoadConst<ImmortalLongExact[4]>
    Return v6
  }
}
---
DeadCodeEliminationCannotRemoveIter
---
def test():
    x = 4
    y = 0
    for i in (0, 1):
        y = i
    return x
---
fun jittestmodule:test {
  bb 0 {
    v10:Nullptr = LoadConst<Nullptr>
    v11:ImmortalLongExact[4] = LoadConst<ImmortalLongExact[4]>
    v13:ImmortalLongExact[0] = LoadConst<ImmortalLongExact[0]>
    v15:MortalTupleExact[tuple:0xdeadbeef] = LoadConst<MortalTupleExact[tuple:0xdeadbeef]>
    v16:Object = GetIter v15 {
      FrameState {
        NextInstrOffset 12
        Locals<3> v11 v13 v10
      }
    }
    Branch<4>
  }

  bb 4 (preds 0, 2) {
    v21:Object = Phi<0, 2> v13 v28
    v22:OptObject = Phi<0, 2> v10 v28
    v18:CInt32 = LoadEvalBreaker
    CondBranch<5, 1> v18
  }

  bb 5 (preds 4) {
    v23:CInt32 = RunPeriodicTasks {
      FrameState {
        NextInstrOffset 12
        Locals<3> v11 v21 v22
        Stack<1> v16
      }
    }
    Branch<1>
  }

  bb 1 (preds 4, 5) {
    v28:Object = InvokeIterNext v16 {
      FrameState {
        NextInstrOffset 14
        Locals<3> v11 v21 v22
        Stack<1> v16
      }
    }
    CondBranchIterNotDone<2, 3> v28
  }

  bb 2 (preds 1) {
    Branch<4>
  }

  bb 3 (preds 1) {
    Return v11
  }
}
---
DeadCodeEliminationDoesNotRemoveInitFunction
---
def test():
    def inner():
        x = 4
    inner()
---
fun jittestmodule:test {
  bb 0 {
    v6:Nullptr = LoadConst<Nullptr>
    v7:MortalCode["inner"] = LoadConst<MortalCode["inner"]>
    v8:MortalUnicodeExact["test.<locals>.inner"] = LoadConst<MortalUnicodeExact["test.<locals>.inner"]>
    v9:MortalFunc = MakeFunction v8 v7 {
      FrameState {
        NextInstrOffset 6
        Locals<1> v6
      }
    }
    InitFunction v9
    v12:Object = VectorCall<0> v9 {
      FrameState {
        NextInstrOffset 12
        Locals<1> v9
      }
    }
    v13:NoneType = LoadConst<NoneType>
    Return v13
  }
}
---
DeadCodeEliminationRemovesPrimitiveBox
---
# HIR
fun test {
  bb 0 {
    v0 = LoadArg<0; "a", CInt32>
    v1 = PrimitiveBox<CInt32> v0
    Return<CInt32> v0
  }
}
---
fun test {
  bb 0 {
    v0:CInt32 = LoadArg<0, CInt32>
    Return<CInt32> v0
  }
}
---